// <auto-generated />
using System;
using Consultorio_de_seguros.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Consultorio_de_seguros.Migrations
{
    [DbContext(typeof(ConsultorioSegurosContext))]
    partial class ConsultorioSegurosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Consultorio_de_seguros.Models.Asegurado", b =>
                {
                    b.Property<int>("AseguradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AseguradoId"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AseguradoId");

                    b.ToTable("Asegurados");
                });

            modelBuilder.Entity("Consultorio_de_seguros.Models.AsignacionSeguroAsegurado", b =>
                {
                    b.Property<int>("AsignacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsignacionId"));

                    b.Property<int>("AseguradoId")
                        .HasColumnType("int");

                    b.Property<int>("SeguroId")
                        .HasColumnType("int");

                    b.HasKey("AsignacionId");

                    b.HasIndex("AseguradoId");

                    b.HasIndex("SeguroId");

                    b.ToTable("Asignaciones");
                });

            modelBuilder.Entity("Consultorio_de_seguros.Models.Seguro", b =>
                {
                    b.Property<int>("SeguroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeguroId"));

                    b.Property<string>("CodigoSeguro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Prima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SumaAsegurada")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SeguroId");

                    b.ToTable("Seguros");
                });

            modelBuilder.Entity("Consultorio_de_seguros.Models.AsignacionSeguroAsegurado", b =>
                {
                    b.HasOne("Consultorio_de_seguros.Models.Asegurado", "Asegurado")
                        .WithMany("Asignaciones")
                        .HasForeignKey("AseguradoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consultorio_de_seguros.Models.Seguro", "Seguro")
                        .WithMany("Asignaciones")
                        .HasForeignKey("SeguroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asegurado");

                    b.Navigation("Seguro");
                });

            modelBuilder.Entity("Consultorio_de_seguros.Models.Asegurado", b =>
                {
                    b.Navigation("Asignaciones");
                });

            modelBuilder.Entity("Consultorio_de_seguros.Models.Seguro", b =>
                {
                    b.Navigation("Asignaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
